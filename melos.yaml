name: ohclays

packages:
  - ohclays_client
  - ohclays_server
  - ohclays_flutter

scripts:
  prepare:
    description: Prepare the project for hacking
    run: dart pub global activate serverpod_cli && melos bs && melos gen --no-select

  assetgen:
    description: Generate assets
    exec: bash scripts/assetgen.sh
    failFast: true
    concurrency: 1
    orderDependents: true
    packageFilters:
      fileExists: "scripts/assetgen.sh"

  codegen:
    description: Generate code
    exec: bash scripts/codegen.sh
    failFast: true
    concurrency: 1
    orderDependents: true
    packageFilters:
      fileExists: "scripts/codegen.sh"

  docker-start:
    description: Start docker containers
    run: cd ohclays_server && bash scripts/docker-start.sh

  docker-stop:
    description: Stop docker containers
    run: cd ohclays_server && bash scripts/docker-stop.sh

  server-start:
    description: Start server
    run: cd ohclays_server && bash scripts/server-start.sh

  server-migrate:
    description: Migrate server
    run: cd ohclays_server && bash scripts/server-migrate.sh

  gen:
    description: Generate all assets and code
    run: melos assetgen --no-select && melos codegen --no-select

  analyze:
    description: Analyze the project
    exec: flutter analyze
    failFast: true

  check-format:
    description: Check the format of all packages in this project
    exec: dart format --set-exit-if-changed .
    failFast: true

  test:
    description: Run all Dart, Flutter and integration tests for all packages in this project
    run: melos run test-dart --no-select && melos run test-flutter --no-select && melos run test-integration --no-select -- $1

  test-dart:
    description: Run all Dart tests for all packages in this project
    exec: dart test test
    failFast: true
    concurrency: 1
    packageFilters:
      flutter: false
      dirExists: test

  test-flutter:
    description: Run all Flutter tests for all packages in this project
    exec: flutter test test
    failFast: true
    concurrency: 1
    packageFilters:
      flutter: true
      dirExists: test

  test-integration:
    description: Run all integration tests for all packages in this project
    exec: flutter test integration_test
    failFast: true
    concurrency: 1
    packageFilters:
      flutter: true
      dirExists: integration_test

  check-all:
    description: Run all checks for all packages in this project
    run: melos analyze && melos check-format && melos test -- $1

  post-clean:
    description: Run post clean scripts
    exec: bash scripts/clean.sh
    failFast: true
    concurrency: 1
    packageFilters:
      fileExists: "scripts/clean.sh"

command:
  clean:
    hooks:
      post: melos post-clean
